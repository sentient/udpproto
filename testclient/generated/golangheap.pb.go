// Code generated by protoc-gen-go. DO NOT EDIT.
// source: golangheap.proto

package heap

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GolangHeap struct {
	AllocationsActive    uint64   `protobuf:"varint,1,opt,name=allocations_active,json=allocationsActive,proto3" json:"allocations_active,omitempty"`
	AllocationsAllocated uint64   `protobuf:"varint,2,opt,name=allocations_allocated,json=allocationsAllocated,proto3" json:"allocations_allocated,omitempty"`
	AllocationsFrees     uint64   `protobuf:"varint,3,opt,name=allocations_frees,json=allocationsFrees,proto3" json:"allocations_frees,omitempty"`
	AllocationsIdle      uint64   `protobuf:"varint,4,opt,name=allocations_idle,json=allocationsIdle,proto3" json:"allocations_idle,omitempty"`
	AllocationsMallocs   uint64   `protobuf:"varint,5,opt,name=allocations_mallocs,json=allocationsMallocs,proto3" json:"allocations_mallocs,omitempty"`
	AllocationsObjects   uint64   `protobuf:"varint,6,opt,name=allocations_objects,json=allocationsObjects,proto3" json:"allocations_objects,omitempty"`
	AllocationsTotal     uint64   `protobuf:"varint,7,opt,name=allocations_total,json=allocationsTotal,proto3" json:"allocations_total,omitempty"`
	GcCpuFraction        float64  `protobuf:"fixed64,8,opt,name=gc_cpu_fraction,json=gcCpuFraction,proto3" json:"gc_cpu_fraction,omitempty"`
	GcNextGcLimit        uint64   `protobuf:"varint,9,opt,name=gc_next_gc_limit,json=gcNextGcLimit,proto3" json:"gc_next_gc_limit,omitempty"`
	GcPauseAvgNs         uint64   `protobuf:"varint,10,opt,name=gc_pause_avg_ns,json=gcPauseAvgNs,proto3" json:"gc_pause_avg_ns,omitempty"`
	GcPauseCount         uint64   `protobuf:"varint,11,opt,name=gc_pause_count,json=gcPauseCount,proto3" json:"gc_pause_count,omitempty"`
	GcPauseMaxNs         uint64   `protobuf:"varint,12,opt,name=gc_pause_max_ns,json=gcPauseMaxNs,proto3" json:"gc_pause_max_ns,omitempty"`
	GcPauseSumNs         uint64   `protobuf:"varint,13,opt,name=gc_pause_sum_ns,json=gcPauseSumNs,proto3" json:"gc_pause_sum_ns,omitempty"`
	GcTotalCount         uint32   `protobuf:"varint,14,opt,name=gc_total_count,json=gcTotalCount,proto3" json:"gc_total_count,omitempty"`
	GcTotalPauseNs       uint64   `protobuf:"varint,15,opt,name=gc_total_pause_ns,json=gcTotalPauseNs,proto3" json:"gc_total_pause_ns,omitempty"`
	SystemObtained       uint64   `protobuf:"varint,16,opt,name=system_obtained,json=systemObtained,proto3" json:"system_obtained,omitempty"`
	SystemReleased       uint64   `protobuf:"varint,17,opt,name=system_released,json=systemReleased,proto3" json:"system_released,omitempty"`
	SystemStack          uint64   `protobuf:"varint,18,opt,name=system_stack,json=systemStack,proto3" json:"system_stack,omitempty"`
	SystemTotal          uint64   `protobuf:"varint,19,opt,name=system_total,json=systemTotal,proto3" json:"system_total,omitempty"`
	TimestampNano        int64    `protobuf:"varint,20,opt,name=timestamp_nano,json=timestampNano,proto3" json:"timestamp_nano,omitempty"`
	ProcessName          string   `protobuf:"bytes,21,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	ProcessId            uint32   `protobuf:"varint,22,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	ProcessCmdline       string   `protobuf:"bytes,23,opt,name=process_cmdline,json=processCmdline,proto3" json:"process_cmdline,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GolangHeap) Reset()         { *m = GolangHeap{} }
func (m *GolangHeap) String() string { return proto.CompactTextString(m) }
func (*GolangHeap) ProtoMessage()    {}
func (*GolangHeap) Descriptor() ([]byte, []int) {
	return fileDescriptor_a55d48d63a29a9e4, []int{0}
}

func (m *GolangHeap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GolangHeap.Unmarshal(m, b)
}
func (m *GolangHeap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GolangHeap.Marshal(b, m, deterministic)
}
func (m *GolangHeap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GolangHeap.Merge(m, src)
}
func (m *GolangHeap) XXX_Size() int {
	return xxx_messageInfo_GolangHeap.Size(m)
}
func (m *GolangHeap) XXX_DiscardUnknown() {
	xxx_messageInfo_GolangHeap.DiscardUnknown(m)
}

var xxx_messageInfo_GolangHeap proto.InternalMessageInfo

func (m *GolangHeap) GetAllocationsActive() uint64 {
	if m != nil {
		return m.AllocationsActive
	}
	return 0
}

func (m *GolangHeap) GetAllocationsAllocated() uint64 {
	if m != nil {
		return m.AllocationsAllocated
	}
	return 0
}

func (m *GolangHeap) GetAllocationsFrees() uint64 {
	if m != nil {
		return m.AllocationsFrees
	}
	return 0
}

func (m *GolangHeap) GetAllocationsIdle() uint64 {
	if m != nil {
		return m.AllocationsIdle
	}
	return 0
}

func (m *GolangHeap) GetAllocationsMallocs() uint64 {
	if m != nil {
		return m.AllocationsMallocs
	}
	return 0
}

func (m *GolangHeap) GetAllocationsObjects() uint64 {
	if m != nil {
		return m.AllocationsObjects
	}
	return 0
}

func (m *GolangHeap) GetAllocationsTotal() uint64 {
	if m != nil {
		return m.AllocationsTotal
	}
	return 0
}

func (m *GolangHeap) GetGcCpuFraction() float64 {
	if m != nil {
		return m.GcCpuFraction
	}
	return 0
}

func (m *GolangHeap) GetGcNextGcLimit() uint64 {
	if m != nil {
		return m.GcNextGcLimit
	}
	return 0
}

func (m *GolangHeap) GetGcPauseAvgNs() uint64 {
	if m != nil {
		return m.GcPauseAvgNs
	}
	return 0
}

func (m *GolangHeap) GetGcPauseCount() uint64 {
	if m != nil {
		return m.GcPauseCount
	}
	return 0
}

func (m *GolangHeap) GetGcPauseMaxNs() uint64 {
	if m != nil {
		return m.GcPauseMaxNs
	}
	return 0
}

func (m *GolangHeap) GetGcPauseSumNs() uint64 {
	if m != nil {
		return m.GcPauseSumNs
	}
	return 0
}

func (m *GolangHeap) GetGcTotalCount() uint32 {
	if m != nil {
		return m.GcTotalCount
	}
	return 0
}

func (m *GolangHeap) GetGcTotalPauseNs() uint64 {
	if m != nil {
		return m.GcTotalPauseNs
	}
	return 0
}

func (m *GolangHeap) GetSystemObtained() uint64 {
	if m != nil {
		return m.SystemObtained
	}
	return 0
}

func (m *GolangHeap) GetSystemReleased() uint64 {
	if m != nil {
		return m.SystemReleased
	}
	return 0
}

func (m *GolangHeap) GetSystemStack() uint64 {
	if m != nil {
		return m.SystemStack
	}
	return 0
}

func (m *GolangHeap) GetSystemTotal() uint64 {
	if m != nil {
		return m.SystemTotal
	}
	return 0
}

func (m *GolangHeap) GetTimestampNano() int64 {
	if m != nil {
		return m.TimestampNano
	}
	return 0
}

func (m *GolangHeap) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

func (m *GolangHeap) GetProcessId() uint32 {
	if m != nil {
		return m.ProcessId
	}
	return 0
}

func (m *GolangHeap) GetProcessCmdline() string {
	if m != nil {
		return m.ProcessCmdline
	}
	return ""
}

func init() {
	proto.RegisterType((*GolangHeap)(nil), "heap.GolangHeap")
}

func init() { proto.RegisterFile("golangheap.proto", fileDescriptor_a55d48d63a29a9e4) }

var fileDescriptor_a55d48d63a29a9e4 = []byte{
	// 493 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x93, 0xdf, 0x6e, 0xd3, 0x30,
	0x14, 0xc6, 0x15, 0x56, 0x36, 0xea, 0xfe, 0xf7, 0x36, 0xf0, 0x0d, 0x52, 0x41, 0x8c, 0x65, 0x42,
	0xc0, 0xc5, 0x9e, 0x60, 0xaa, 0xb4, 0x31, 0x89, 0x65, 0x28, 0xe3, 0xde, 0x72, 0x9d, 0x33, 0x13,
	0x88, 0xed, 0x28, 0x76, 0xaa, 0xf2, 0x72, 0x3c, 0x1b, 0xb2, 0x9d, 0x56, 0xce, 0x76, 0x97, 0xfe,
	0xbe, 0xdf, 0xf9, 0x9c, 0x1c, 0xab, 0x68, 0x2e, 0x74, 0xc5, 0x94, 0xf8, 0x05, 0xac, 0xfe, 0x52,
	0x37, 0xda, 0x6a, 0x3c, 0x70, 0xcf, 0xef, 0xff, 0x1d, 0x21, 0x74, 0xe3, 0xa3, 0x6f, 0xc0, 0x6a,
	0xfc, 0x19, 0x61, 0x56, 0x55, 0x9a, 0x33, 0x5b, 0x6a, 0x65, 0x28, 0xe3, 0xb6, 0xdc, 0x00, 0x49,
	0x96, 0x49, 0x3a, 0xc8, 0x17, 0x51, 0x72, 0xe5, 0x03, 0x7c, 0x89, 0x4e, 0x7b, 0x7a, 0x78, 0x86,
	0x82, 0xbc, 0xf0, 0x13, 0x27, 0xf1, 0xc4, 0x2e, 0xc3, 0x9f, 0x50, 0xdc, 0x44, 0x1f, 0x1b, 0x00,
	0x43, 0x0e, 0xfc, 0xc0, 0x3c, 0x0a, 0xae, 0x1d, 0xc7, 0x17, 0x28, 0x66, 0xb4, 0x2c, 0x2a, 0x20,
	0x03, 0xef, 0xce, 0x22, 0x7e, 0x5b, 0x54, 0x80, 0xbf, 0xa2, 0xe3, 0x58, 0x95, 0xfe, 0x87, 0x21,
	0x2f, 0xbd, 0x1d, 0x7f, 0xd6, 0x5d, 0x48, 0x9e, 0x0e, 0xe8, 0xf5, 0x6f, 0xe0, 0xd6, 0x90, 0xc3,
	0x67, 0x03, 0xf7, 0x21, 0x79, 0xfa, 0xe6, 0x56, 0x5b, 0x56, 0x91, 0xa3, 0x67, 0x6f, 0xfe, 0xd3,
	0x71, 0xfc, 0x11, 0xcd, 0x04, 0xa7, 0xbc, 0x6e, 0xe9, 0x63, 0xe3, 0xf6, 0xa8, 0x15, 0x79, 0xb5,
	0x4c, 0xd2, 0x24, 0x9f, 0x08, 0xbe, 0xaa, 0xdb, 0xeb, 0x0e, 0xe2, 0x73, 0x34, 0x17, 0x9c, 0x2a,
	0xd8, 0x5a, 0x2a, 0x38, 0xad, 0x4a, 0x59, 0x5a, 0x32, 0xf4, 0x9d, 0x13, 0xc1, 0x33, 0xd8, 0xda,
	0x1b, 0xfe, 0xdd, 0x41, 0x7c, 0xe6, 0x0b, 0x6b, 0xd6, 0x1a, 0xa0, 0x6c, 0x23, 0xa8, 0x32, 0x04,
	0x79, 0x6f, 0x2c, 0xf8, 0x0f, 0x47, 0xaf, 0x36, 0x22, 0x33, 0xf8, 0x03, 0x9a, 0xee, 0x35, 0xae,
	0x5b, 0x65, 0xc9, 0xa8, 0x67, 0xad, 0x1c, 0xeb, 0x95, 0x49, 0xb6, 0x75, 0x65, 0xe3, 0x9e, 0x76,
	0xc7, 0xb6, 0x99, 0xe9, 0x69, 0xa6, 0x95, 0x4e, 0x9b, 0xf4, 0xb4, 0x87, 0x56, 0xee, 0xcf, 0xf4,
	0xfb, 0xe8, 0xce, 0x9c, 0x2e, 0x93, 0x74, 0xe2, 0x2c, 0xbf, 0x8c, 0x70, 0xe6, 0x05, 0x5a, 0xec,
	0xad, 0x50, 0xa9, 0x0c, 0x99, 0xf9, 0xba, 0x69, 0x27, 0xfa, 0xce, 0xcc, 0xe0, 0x73, 0x34, 0x33,
	0x7f, 0x8d, 0x05, 0x49, 0xf5, 0xda, 0xb2, 0x52, 0x41, 0x41, 0xe6, 0x41, 0x0c, 0xf8, 0xbe, 0xa3,
	0x91, 0xd8, 0x40, 0x05, 0xcc, 0x40, 0x41, 0x16, 0xb1, 0x98, 0x77, 0x14, 0xbf, 0x43, 0xe3, 0x4e,
	0x34, 0x96, 0xf1, 0x3f, 0x04, 0x7b, 0x6b, 0x14, 0xd8, 0x83, 0x43, 0x91, 0x12, 0x6e, 0xf6, 0x38,
	0x56, 0xc2, 0xa5, 0x9e, 0xa1, 0xa9, 0x2d, 0x25, 0x18, 0xcb, 0x64, 0x4d, 0x15, 0x53, 0x9a, 0x9c,
	0x2c, 0x93, 0xf4, 0x20, 0x9f, 0xec, 0x69, 0xc6, 0x94, 0x76, 0x4d, 0x75, 0xa3, 0x39, 0x18, 0x43,
	0x15, 0x93, 0x40, 0x4e, 0x97, 0x49, 0x3a, 0xcc, 0x47, 0x1d, 0xcb, 0x98, 0x04, 0xfc, 0x16, 0xa1,
	0x9d, 0x52, 0x16, 0xe4, 0xb5, 0x5f, 0xd7, 0xb0, 0x23, 0xb7, 0xfe, 0xbb, 0x76, 0x31, 0x97, 0x45,
	0x55, 0x2a, 0x20, 0x6f, 0x7c, 0xc9, 0xb4, 0xc3, 0xab, 0x40, 0xd7, 0x87, 0xfe, 0xdf, 0x7c, 0xf9,
	0x3f, 0x00, 0x00, 0xff, 0xff, 0xb7, 0x85, 0x20, 0x7c, 0xe1, 0x03, 0x00, 0x00,
}
